import os
import asyncio
from dotenv import load_dotenv
from aiogram import Bot, Dispatcher, types, F
from aiogram.enums.parse_mode import ParseMode
from aiogram.client.default import DefaultBotProperties
from aiogram.filters import CommandStart
from aiogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton, WebAppInfo, CallbackQuery
from aiogram.utils.markdown import hlink
from aiogram import BaseMiddleware, Router
from aiogram.types import TelegramObject
from typing import Callable, Awaitable, Dict, Any

# --- Middleware: –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —Ç–æ–ª—å–∫–æ –ª–∏—á–∫—É ---
class PrivateOnlyMiddleware(BaseMiddleware):
    async def __call__(
        self,
        handler: Callable,
        event: TelegramObject,
        data: Dict[str, Any]
    ) -> Any:
        chat = getattr(event, 'chat', None) or getattr(getattr(event, 'message', None), 'chat', None)
        if chat and chat.type != "private":
            return  # –ù–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≥—Ä—É–ø–ø–æ–≤—ã–µ/–∫–∞–Ω–∞–ª—å–Ω—ã–µ —á–∞—Ç—ã
        return await handler(event, data)

# --- –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ ---
load_dotenv("/opt/ndloadouts/.env")
BOT_TOKEN = os.getenv("TOKEN")
WEBAPP_URL = os.getenv("WEBAPP_URL")
CHANNEL_ID = "@callofdutynd"

if not BOT_TOKEN or not WEBAPP_URL:
    raise ValueError("‚ùå BOT_TOKEN –∏ WEBAPP_URL –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∑–∞–¥–∞–Ω—ã –≤ .env")

# --- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è ---
bot = Bot(token=BOT_TOKEN, default=DefaultBotProperties(parse_mode=ParseMode.HTML))
dp = Dispatcher()
router = Router()

dp.message.middleware(PrivateOnlyMiddleware())
dp.callback_query.middleware(PrivateOnlyMiddleware())
dp.include_router(router)

# --- /start ---
@router.message(CommandStart())
async def start_handler(message: Message):
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text="üì• –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è", url="https://t.me/callofdutynd"),
            InlineKeyboardButton(text="‚úÖ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å", callback_data="check_sub")
        ]
    ])
    await message.answer(
        "ü™Ç –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —à—Ç–∞–±, –±–æ–µ—Ü!\n\n"
        "üì° –ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ —Å–±–æ—Ä–∫–∞–º, —Å–Ω–∞—á–∞–ª–∞ –ø–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª.",
        reply_markup=keyboard
    )

# --- –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏ ---
@router.callback_query(F.data == "check_sub")
async def check_subscription(callback: CallbackQuery):
    user_id = callback.from_user.id
    try:
        member = await bot.get_chat_member(chat_id=CHANNEL_ID, user_id=user_id)

        if member.status not in ("left", "kicked"):
            name = callback.from_user.first_name or "–±–æ–µ—Ü"
            text = (
                f"ü™Ç –í—ã—Å–∞–¥–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞, {name}!\n\n"
                "üîª –ñ–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã —Å–æ–±—Ä–∞—Ç—å —Å–≤–æ—é –º–µ—Ç—É –∏ –≤–æ—Ä–≤–∞—Ç—å—Å—è –≤ —Ç–æ–ø-1!\n\n"
                f"üí¨ –ù–∞—à—ë–ª –±–∞–≥, –µ—Å—Ç—å –∏–¥–µ—è –∏–ª–∏ —Ö–æ—á–µ—à—å –¥–æ–±–∞–≤–∏—Ç—å —Å–±–æ—Ä–∫—É? ‚Äî "
                f"{hlink('–ü–∏—à–∏ –≤ —à—Ç–∞–±', 'https://t.me/ndzone_admin')}"
            )
            keyboard = InlineKeyboardMarkup(inline_keyboard=[
                [
                    InlineKeyboardButton(text="üîó –û—Ç–∫—Ä—ã—Ç—å —Å–±–æ—Ä–∫–∏", web_app=WebAppInfo(url=WEBAPP_URL)),
                    InlineKeyboardButton(text="üí¨ –®—Ç–∞–±", url="https://t.me/ndzone_admin")
                ]
            ])
            await callback.message.edit_text(text, reply_markup=keyboard)
            return

    except Exception as e:
        # –º–æ–∂–Ω–æ –ª–æ–≥–∏—Ä–æ–≤–∞—Ç—å: print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏: {e}")
        pass

    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text="üì• –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è", url="https://t.me/callofdutynd"),
            InlineKeyboardButton(text="üîÅ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–Ω–æ–≤–∞", callback_data="check_sub")
        ]
    ])
    await callback.answer("‚ùå –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞. –ü–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑.", show_alert=True)
    await callback.message.edit_text(
        "üö´ –î–æ—Å—Ç—É–ø –≤—Ä–µ–º–µ–Ω–Ω–æ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω.\n\n"
        "–¢—ã –µ—â—ë –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω –Ω–∞ –Ω–∞—à—É –±–∞–∑—É –∫–æ–º–∞–Ω–¥–æ–≤–∞–Ω–∏—è.\n"
        "üõ∞ –ë–µ–∑ —Å–≤—è–∑–∏ —Å –±–∞–∑–æ–π –¥–æ—Å—Ç—É–ø –∫ —Å–±–æ—Ä–∫–∞–º –Ω–µ–≤–æ–∑–º–æ–∂–µ–Ω.",
        reply_markup=keyboard
    )

# --- –ó–∞–ø—É—Å–∫ ---
async def main():
    print("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω.")
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
