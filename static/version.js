// ===============================
// üì¶ VERSION HISTORY LOGIC (–æ–±–Ω–æ–≤–ª–µ–Ω–æ)
// ===============================
console.log("version.js loaded");

let quillVersion;
let isAdminVersion = false;
let currentFilter = "published"; // –≤–∫–ª–∞–¥–∫–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é

document.addEventListener("DOMContentLoaded", async () => {
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const me = await fetch("/api/me", {
    method: "POST",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify({ initData: tg.initData })
  }).then(r => r.json());

  isAdminVersion = me.is_admin;

  if (isAdminVersion) {
    document.getElementById("version-admin-panel").style.display = "block";
    document.querySelector(".version-tabs").style.display = "flex";
  }

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Ä–µ–¥–∞–∫—Ç–æ—Ä Quill
  quillVersion = new Quill("#version-quill", {
    theme: "snow",
    placeholder: "–û–ø–∏—Å–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π..."
  });

  // –ó–∞–≥—Ä—É–∂–∞–µ–º –≤–µ—Ä—Å–∏–∏
  loadVersions();

  // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –≤–∫–ª–∞–¥–æ–∫ (–û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã–µ / –ß–µ—Ä–Ω–æ–≤–∏–∫–∏)
  document.querySelectorAll(".version-tab").forEach(tab => {
    tab.addEventListener("click", () => {
      document.querySelectorAll(".version-tab").forEach(t => t.classList.remove("active"));
      tab.classList.add("active");
      currentFilter = tab.dataset.filter;
      loadVersions();
    });
  });

  // –û—Ç–∫—Ä—ã—Ç–∏–µ / –∑–∞–∫—Ä—ã—Ç–∏–µ —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞
  document.getElementById("version-admin-toggle").addEventListener("click", () => {
    const editor = document.getElementById("version-editor");
    editor.style.display = editor.style.display === "none" ? "block" : "none";
  });

  // –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π
  document.getElementById("version-publish-btn").addEventListener("click", () => saveVersion("published"));
  document.getElementById("version-draft-btn").addEventListener("click", () => saveVersion("draft"));
  document.getElementById("version-update-btn").addEventListener("click", updateVersion);
});

// –ó–∞–≥—Ä—É–∑–∫–∞ –≤–µ—Ä—Å–∏–π
async function loadVersions() {
  const list = document.getElementById("version-list");
  list.innerHTML = "–ó–∞–≥—Ä—É–∑–∫–∞...";

  let versions = [];
  if (isAdminVersion && currentFilter === "draft") {
    // –ê–¥–º–∏–Ω —Ö–æ—á–µ—Ç –≤–∏–¥–µ—Ç—å —á–µ—Ä–Ω–æ–≤–∏–∫–∏ ‚Üí –Ω—É–∂–µ–Ω initData
    versions = await fetch(`/api/version/all?initData=${encodeURIComponent(tg.initData)}`)
      .then(r => r.json());
  } else {
    // –û–±—ã—á–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –≤–∏–¥—è—Ç —Ç–æ–ª—å–∫–æ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã–µ
    versions = await fetch("/api/version").then(r => r.json());
  }

  list.innerHTML = "";

  versions
    .filter(v => !isAdminVersion || v.status === currentFilter)
    .forEach(v => list.appendChild(renderVersionCard(v)));
}


// ===============================
// –†–µ–Ω–¥–µ—Ä –∫–∞—Ä—Ç–æ—á–∫–∏ –≤–µ—Ä—Å–∏–∏
// ===============================
function renderVersionCard(v) {
  const card = document.createElement("div");
  card.className = "version-card";

  const shortText = v.content.replace(/<[^>]*>/g, "").substring(0, 250);
  const isLong = v.content.replace(/<[^>]*>/g, "").length > 250;

  card.innerHTML = `
    <div class="version-title">${v.version} ‚Äì ${v.title}</div>
    <div class="version-date">üóì ${v.created_at}</div>
    <div class="version-content-preview">${shortText}${isLong ? "..." : ""}</div>
    ${isLong ? `<button class="version-toggle">–ß–∏—Ç–∞—Ç—å –ø–æ–ª–Ω–æ—Å—Ç—å—é</button>` : ""}
    <div class="version-content-full" style="display:none;">${v.content}</div>
    ${isAdminVersion ? `
      <div class="version-actions">
        <button class="edit"
          data-id="${v.id}"
          data-version="${v.version}"
          data-title="${v.title}"
          data-content='${encodeURIComponent(v.content)}'>‚úè –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å</button>
        <button class="delete" data-id="${v.id}">üóë –£–¥–∞–ª–∏—Ç—å</button>
      </div>` : ""}
  `;

  // —Ä–∞—Å–∫—Ä—ã—Ç–∏–µ —Ç–µ–∫—Å—Ç–∞
  const toggle = card.querySelector(".version-toggle");
  if (toggle) {
    toggle.addEventListener("click", () => {
      const full = card.querySelector(".version-content-full");
      const preview = card.querySelector(".version-content-preview");

      const isExpanded = full.style.display === "block";
      if (isExpanded) {
        full.style.display = "none";
        preview.style.display = "block";
        toggle.textContent = "–ß–∏—Ç–∞—Ç—å –ø–æ–ª–Ω–æ—Å—Ç—å—é";
      } else {
        full.style.display = "block";
        preview.style.display = "none";
        toggle.textContent = "–°–∫—Ä—ã—Ç—å";
      }
    });
  }

  // —É–¥–∞–ª–∏—Ç—å / —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
  if (isAdminVersion) {
    card.querySelector(".delete").addEventListener("click", () => deleteVersion(v.id));

    card.querySelector(".edit").addEventListener("click", (e) => {
      const btn = e.target;
      const id = btn.dataset.id;
      const version = btn.dataset.version;
      const title = btn.dataset.title;
      const content = decodeURIComponent(btn.dataset.content);

      // –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ä–µ–¥–∞–∫—Ç–æ—Ä
      document.getElementById("version-editor").style.display = "block";
      document.getElementById("version-input").value = version;
      document.getElementById("version-title-input").value = title;
      quillVersion.root.innerHTML = content;

      document.getElementById("version-create-buttons").style.display = "none";
      document.getElementById("version-update-btn").style.display = "block";
      document.getElementById("version-update-btn").dataset.id = id;
    });
  }

  return card;
}

// ===============================
// –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤–µ—Ä—Å–∏—é
// ===============================
async function saveVersion(status) {
  const version = document.getElementById("version-input").value.trim();
  const title = document.getElementById("version-title-input").value.trim();
  const content = quillVersion.root.innerHTML;

  if (!version || !title || !content) {
    alert("–í—Å–µ –ø–æ–ª—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã!");
    return;
  }

  const res = await fetch("/api/version", {
    method: "POST",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify({ version, title, content, status, initData: tg.initData })
  }).then(r => r.json());

  if (res.status === "ok") {
    loadVersions();
    resetEditor();
  } else {
    alert("–û—à–∏–±–∫–∞: " + res.detail);
  }
}

// ===============================
// –û–±–Ω–æ–≤–∏—Ç—å –≤–µ—Ä—Å–∏—é
// ===============================
async function updateVersion() {
  const id = document.getElementById("version-update-btn").dataset.id;
  const version = document.getElementById("version-input").value.trim();
  const title = document.getElementById("version-title-input").value.trim();
  const content = quillVersion.root.innerHTML;

  if (!version || !title || !content) {
    alert("–í—Å–µ –ø–æ–ª—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã!");
    return;
  }

  const res = await fetch(`/api/version/${id}`, {
    method: "PUT",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify({ version, title, content, initData: tg.initData })
  }).then(r => r.json());

  if (res.status === "ok") {
    loadVersions();
    resetEditor();
  } else {
    alert("–û—à–∏–±–∫–∞: " + res.detail);
  }
}

// ===============================
// –£–¥–∞–ª–∏—Ç—å –≤–µ—Ä—Å–∏—é
// ===============================
async function deleteVersion(id) {
  if (!confirm("–£–¥–∞–ª–∏—Ç—å –≤–µ—Ä—Å–∏—é –Ω–∞–≤—Å–µ–≥–¥–∞?")) return;

  const res = await fetch(`/api/version/${id}`, {
    method: "DELETE",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify({ initData: tg.initData })
  }).then(r => r.json());

  if (res.status === "ok") {
    loadVersions();
  } else {
    alert("–û—à–∏–±–∫–∞: " + res.detail);
  }
}

// ===============================
// –°–±—Ä–æ—Å —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞
// ===============================
function resetEditor() {
  document.getElementById("version-input").value = "";
  document.getElementById("version-title-input").value = "";
  quillVersion.root.innerHTML = "";
  document.getElementById("version-editor").style.display = "none";
  document.getElementById("version-create-buttons").style.display = "flex";
  document.getElementById("version-update-btn").style.display = "none";
}
